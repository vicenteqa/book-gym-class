name: Template

on:
    workflow_call:
        inputs:
            activity:
                description: 'Activity name, aka the class to book'
                required: true
                type: string
            activity_time:
                description: 'Time of the activity on the schedule of the gym in the format HH:MM'
                required: true
                type: string
            days_ahead:
                description: 'Days ahead to check the activity calendar of the gym'
                required: false
                default: 2
                type: string
        secrets:
            BASE_URL:
                required: true
            GYMUSERNAME:
                required: true
            PASSWORD:
                required: true

env:
    BASE_URL: ${{ secrets.BASE_URL }}
    GYMUSERNAME: ${{ secrets.GYMUSERNAME }}
    PASSWORD: ${{ secrets.PASSWORD }}
    ACTIVITY: ${{ inputs.activity }}
    ACTIVITY_TIME: ${{ inputs.activity_time }}
    DAYS_AHEAD: ${{ inputs.days_ahead }}

jobs:
    test:
        timeout-minutes: 60
        runs-on: ubuntu-latest
        steps:
            - name: Show current time for debuggin purposes
              run: TZ="Europe/Madrid" date +"%Y-%m-%d %H:%M:%S"
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 18
            - name: Install dependencies
              run: npm ci
            - name: Install Playwright Browsers
              run: npx playwright install --with-deps
            - name: Sleep until the target time
              run: |
                  # Set the target time to ${{ inputs.activity_time }} Madrid time for today
                  TARGET_TIME=$(TZ="Europe/Madrid" date -d ${{ inputs.activity_time }} +%s)
                  # Get current time in seconds since epoch
                  CURRENT_TIMESTAMP=$(date +%s)
                  # Calculate the difference (sleep time in seconds)
                  SLEEP_TIME=$((TARGET_TIME - CURRENT_TIMESTAMP))
                  # Check if the target time is in the future
                  if [ "$SLEEP_TIME" -gt 0 ]; then
                  echo "Sleeping for $SLEEP_TIME seconds until ${{ inputs.activity_time }} Madrid time..."
                  sleep "$SLEEP_TIME"
                  else
                  echo "Target time has already passed for today."
                  fi
                  # Continue execution after sleep
                  echo "Reached the target timestamp. Continuing execution..."
            - name: Run Playwright tests
              run: npx playwright test
            - uses: actions/upload-artifact@v4
              if: ${{ !cancelled() }}
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 3
